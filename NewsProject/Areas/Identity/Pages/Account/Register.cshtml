@page
@model RegisterModel

@using Newtonsoft.Json;
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Register";
    var session = HttpContextAccessor.HttpContext.Session;
    var date = DateTime.Today.ToString("yyyy/MM/dd");
    
}

<hr />
<h5 id="font" class="justify-content-end text-danger">User Registeration / Create a New Account</h5>
<hr />
<div id="font" class="row justify-content-center border border-1" style="background-color:whitesmoke">
    <div class="col-md-6">
        <br />
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FirstName" class="form-control" autocomplete="firstname" aria-required="true" placeholder="FirstName" />
                <label asp-for="Input.FirstName">FirstName</label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.LastName" class="form-control" autocomplete="lastname" aria-required="true" placeholder="LastName" />
                <label asp-for="Input.LastName">LastName</label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.DOB" type="date" max="@date" class="form-control" autocomplete="dateofbirth" aria-required="true" placeholder="dd-mm-yyyy" />
                <label asp-for="Input.DOB">Date of Birth</label>
                <span asp-validation-for="Input.DOB" class="text-danger"></span>
            </div>
            @if (!User.IsInRole("Admin"))
            {
                <div class="form-floating mb-3">
                    <input asp-for="Input.DeliveryAddress" class="form-control" autocomplete="Address" aria-required="true" placeholder="Address" />
                    <label asp-for="Input.DeliveryAddress">Delivery Address</label>
                    <span asp-validation-for="Input.DeliveryAddress" class="text-danger"></span>
                </div>
            }
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            @if (User.IsInRole("Admin"))
            {
                <div class="form-floating mb-3">
                    <select asp-for="Input.UserRole" class="form-control">
                        <option  value=""></option>
                        @{
                            List<string> rolelist = JsonConvert.DeserializeObject<List<string>>(session.GetString("RoleList"));
                            foreach (var item in rolelist)
                            {
                                <option value="@item">@item</option>
                            }
                        }
                    </select>
                    <label asp-for="Input.UserRole">Choose User Role</label>&nbsp;
                    <span asp-validation-for="Input.UserRole" class="text-danger"></span>
                </div>
            }
            <button id="registerSubmit" type="submit" class="mb-2 w-100 btn btn-lg bg-success bg-gradient text-white">REGISTER</button>
        </form>
    </div>
</div>
    @* <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div> *@

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
